#include <Eigen/Dense>
#include <cmath>
#include <gsl/gsl_errno.h>
#include <gsl/gsl_odeiv2.h>
#include <iostream>
#include "rattleback.h"

int rattleback_ode(double t,
                   const double x[],
                   double dxdt[],
                   void *params)
{
  static Eigen::FullPivLU< Eigen::Matrix<double, 5, 5> > FPLU5;
  static Eigen::FullPivLU< Eigen::Matrix<double, 3, 3> > FPLU3;
  static Eigen::Matrix<double, 8, 1> _dxdt;

  rattleback_params *p = static_cast<rattleback_params *>(params);
  const double a = p->a,
               b = p->b,
               c = p->c,
               d = p->d,
               e = p->e,
               f = p->f,
               m = p->m,
               Ixx = p->Ixx,
               Iyy = p->Iyy,
               Izz = p->Izz,
               Ixy = p->Ixy,
               Iyz = p->Iyz,
               Ixz = p->Ixz,
               g = p->g;

  // Begin Copy Paste
  static Eigen::Matrix<double, 5, 5> M_qd;
  static Eigen::Matrix<double, 5, 1> f_qd;
  static Eigen::Matrix<double, 3, 1> f_dyn;
  static Eigen::Matrix<double, 3, 3> M_dyn;

  f_qd(0, 0) = -x[5]*sin(x[2])/cos(x[1]) + x[7]*cos(x[2])/cos(x[1]);
  f_qd(1, 0) = x[5]*cos(x[2]) + x[7]*sin(x[2]);
  f_qd(2, 0) = x[5]*sin(x[1])*sin(x[2])/cos(x[1]) + x[6] - x[7]*sin(x[1])*cos(x[2])/cos(x[1]);
  f_qd(3, 0) = (-pow(b, 2)*(sin(x[0])*sin(x[1])*cos(x[2]) + sin(x[2])*cos(x[0]))*sin(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) - pow(c, 2)*sin(x[0])*pow(cos(x[1]), 2)*cos(x[2])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)))*x[5] + (-pow(a, 2)*(sin(x[0])*sin(x[1])*cos(x[2]) + sin(x[2])*cos(x[0]))*sin(x[2])*cos(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) - pow(c, 2)*(-sin(x[0])*sin(x[1])*sin(x[2]) + cos(x[0])*cos(x[2]))*cos(x[1])*cos(x[2])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)))*x[6] + (-pow(a, 2)*sin(x[0])*sin(x[2])*pow(cos(x[1]), 2)/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + pow(b, 2)*(-sin(x[0])*sin(x[1])*sin(x[2]) + cos(x[0])*cos(x[2]))*sin(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)))*x[7];
  f_qd(4, 0) = (-pow(b, 2)*(sin(x[0])*sin(x[2]) - sin(x[1])*cos(x[0])*cos(x[2]))*sin(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + pow(c, 2)*cos(x[0])*pow(cos(x[1]), 2)*cos(x[2])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)))*x[5] + (-pow(a, 2)*(sin(x[0])*sin(x[2]) - sin(x[1])*cos(x[0])*cos(x[2]))*sin(x[2])*cos(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) - pow(c, 2)*(sin(x[0])*cos(x[2]) + sin(x[1])*sin(x[2])*cos(x[0]))*cos(x[1])*cos(x[2])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)))*x[6] + (pow(a, 2)*sin(x[2])*cos(x[0])*pow(cos(x[1]), 2)/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + pow(b, 2)*(sin(x[0])*cos(x[2]) + sin(x[1])*sin(x[2])*cos(x[0]))*sin(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)))*x[7];
  M_qd(0, 0) = 1;
  M_qd(0, 1) = 0;
  M_qd(0, 2) = 0;
  M_qd(0, 3) = 0;
  M_qd(0, 4) = 0;
  M_qd(1, 0) = 0;
  M_qd(1, 1) = 1;
  M_qd(1, 2) = 0;
  M_qd(1, 3) = 0;
  M_qd(1, 4) = 0;
  M_qd(2, 0) = 0;
  M_qd(2, 1) = 0;
  M_qd(2, 2) = 1;
  M_qd(2, 3) = 0;
  M_qd(2, 4) = 0;
  M_qd(3, 0) = (-sin(x[0])*sin(x[1])*sin(x[2]) + cos(x[0])*cos(x[2]))*(pow(b, 2)*sin(x[1])*cos(x[1])*cos(x[2])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) - pow(c, 2)*sin(x[1])*cos(x[1])*cos(x[2])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2))) + (sin(x[0])*sin(x[1])*cos(x[2]) + sin(x[2])*cos(x[0]))*(-pow(a, 2)*sin(x[1])*sin(x[2])*cos(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + pow(b, 2)*sin(x[1])*sin(x[2])*cos(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2))) - (pow(a, 2)*sin(x[2])*pow(cos(x[1]), 2)*cos(x[2])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) - pow(c, 2)*sin(x[2])*pow(cos(x[1]), 2)*cos(x[2])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)))*sin(x[0])*cos(x[1]);
  M_qd(3, 1) = pow(b, 2)*(-sin(x[0])*sin(x[1])*sin(x[2]) + cos(x[0])*cos(x[2]))*sin(x[1])*sin(x[2])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) - pow(b, 2)*(sin(x[0])*sin(x[1])*cos(x[2]) + sin(x[2])*cos(x[0]))*sin(x[1])*cos(x[2])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) - (pow(a, 2)*pow(sin(x[2]), 2)*cos(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + pow(c, 2)*cos(x[1])*pow(cos(x[2]), 2)/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)))*sin(x[0])*cos(x[1]);
  M_qd(3, 2) = 0;
  M_qd(3, 3) = 1;
  M_qd(3, 4) = 0;
  M_qd(4, 0) = (sin(x[0])*sin(x[2]) - sin(x[1])*cos(x[0])*cos(x[2]))*(-pow(a, 2)*sin(x[1])*sin(x[2])*cos(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + pow(b, 2)*sin(x[1])*sin(x[2])*cos(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2))) + (sin(x[0])*cos(x[2]) + sin(x[1])*sin(x[2])*cos(x[0]))*(pow(b, 2)*sin(x[1])*cos(x[1])*cos(x[2])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) - pow(c, 2)*sin(x[1])*cos(x[1])*cos(x[2])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2))) + (pow(a, 2)*sin(x[2])*pow(cos(x[1]), 2)*cos(x[2])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) - pow(c, 2)*sin(x[2])*pow(cos(x[1]), 2)*cos(x[2])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)))*cos(x[0])*cos(x[1]);
  M_qd(4, 1) = -pow(b, 2)*(sin(x[0])*sin(x[2]) - sin(x[1])*cos(x[0])*cos(x[2]))*sin(x[1])*cos(x[2])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + pow(b, 2)*(sin(x[0])*cos(x[2]) + sin(x[1])*sin(x[2])*cos(x[0]))*sin(x[1])*sin(x[2])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + (pow(a, 2)*pow(sin(x[2]), 2)*cos(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + pow(c, 2)*cos(x[1])*pow(cos(x[2]), 2)/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)))*cos(x[0])*cos(x[1]);
  M_qd(4, 2) = 0;
  M_qd(4, 3) = 0;
  M_qd(4, 4) = 1;
  f_dyn(0, 0) = -g*m*((-pow(b, 2)*sin(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + e)*cos(x[1])*cos(x[2]) + (pow(c, 2)*cos(x[1])*cos(x[2])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) - f)*sin(x[1])) + m*(-((-pow(b, 2)*sin(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + e)*x[5] - (pow(a, 2)*sin(x[2])*cos(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + d)*x[6])*x[5] + (-(-pow(b, 2)*sin(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + e)*x[7] + (-pow(c, 2)*cos(x[1])*cos(x[2])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + f)*x[6])*x[7])*(pow(c, 2)*cos(x[1])*cos(x[2])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) - f) + m*(-(-(-pow(b, 2)*sin(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + e)*x[7] + (-pow(c, 2)*cos(x[1])*cos(x[2])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + f)*x[6])*x[6] + ((pow(a, 2)*sin(x[2])*cos(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + d)*x[7] - (-pow(c, 2)*cos(x[1])*cos(x[2])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + f)*x[5])*x[5])*(-pow(b, 2)*sin(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + e) - (Ixy*x[5] + Iyy*x[6] + Iyz*x[7])*x[7] + (Ixz*x[5] + Iyz*x[6] + Izz*x[7])*x[6];
  f_dyn(1, 0) = -g*m*((-pow(a, 2)*sin(x[2])*cos(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) - d)*cos(x[1])*cos(x[2]) - (-pow(c, 2)*cos(x[1])*cos(x[2])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + f)*sin(x[2])*cos(x[1])) + m*(((-pow(b, 2)*sin(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + e)*x[5] - (pow(a, 2)*sin(x[2])*cos(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + d)*x[6])*x[6] - ((pow(a, 2)*sin(x[2])*cos(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + d)*x[7] - (-pow(c, 2)*cos(x[1])*cos(x[2])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + f)*x[5])*x[7])*(-pow(c, 2)*cos(x[1])*cos(x[2])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + f) + m*(-(-(-pow(b, 2)*sin(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + e)*x[7] + (-pow(c, 2)*cos(x[1])*cos(x[2])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + f)*x[6])*x[6] + ((pow(a, 2)*sin(x[2])*cos(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + d)*x[7] - (-pow(c, 2)*cos(x[1])*cos(x[2])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + f)*x[5])*x[5])*(-pow(a, 2)*sin(x[2])*cos(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) - d) + (Ixx*x[5] + Ixy*x[6] + Ixz*x[7])*x[7] - (Ixz*x[5] + Iyz*x[6] + Izz*x[7])*x[5];
  f_dyn(2, 0) = -g*m*(-(pow(b, 2)*sin(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) - e)*sin(x[2])*cos(x[1]) + (pow(a, 2)*sin(x[2])*cos(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + d)*sin(x[1])) + m*(-((-pow(b, 2)*sin(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + e)*x[5] - (pow(a, 2)*sin(x[2])*cos(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + d)*x[6])*x[5] + (-(-pow(b, 2)*sin(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + e)*x[7] + (-pow(c, 2)*cos(x[1])*cos(x[2])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + f)*x[6])*x[7])*(pow(a, 2)*sin(x[2])*cos(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + d) + m*(((-pow(b, 2)*sin(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + e)*x[5] - (pow(a, 2)*sin(x[2])*cos(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + d)*x[6])*x[6] - ((pow(a, 2)*sin(x[2])*cos(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + d)*x[7] - (-pow(c, 2)*cos(x[1])*cos(x[2])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + f)*x[5])*x[7])*(pow(b, 2)*sin(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) - e) - (Ixx*x[5] + Ixy*x[6] + Ixz*x[7])*x[6] + (Ixy*x[5] + Iyy*x[6] + Iyz*x[7])*x[5];
  M_dyn(0, 0) = -Ixx - m*pow(-pow(b, 2)*sin(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + e, 2) - m*pow(pow(c, 2)*cos(x[1])*cos(x[2])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) - f, 2);
  M_dyn(0, 1) = -Ixy - m*(-pow(b, 2)*sin(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + e)*(-pow(a, 2)*sin(x[2])*cos(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) - d);
  M_dyn(0, 2) = -Ixz - m*(pow(a, 2)*sin(x[2])*cos(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + d)*(pow(c, 2)*cos(x[1])*cos(x[2])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) - f);
  M_dyn(1, 0) = -Ixy - m*(-pow(b, 2)*sin(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + e)*(-pow(a, 2)*sin(x[2])*cos(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) - d);
  M_dyn(1, 1) = -Iyy - m*pow(-pow(a, 2)*sin(x[2])*cos(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) - d, 2) - m*pow(-pow(c, 2)*cos(x[1])*cos(x[2])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + f, 2);
  M_dyn(1, 2) = -Iyz - m*(pow(b, 2)*sin(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) - e)*(-pow(c, 2)*cos(x[1])*cos(x[2])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + f);
  M_dyn(2, 0) = -Ixz - m*(pow(a, 2)*sin(x[2])*cos(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + d)*(pow(c, 2)*cos(x[1])*cos(x[2])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) - f);
  M_dyn(2, 1) = -Iyz - m*(pow(b, 2)*sin(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) - e)*(-pow(c, 2)*cos(x[1])*cos(x[2])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + f);
  M_dyn(2, 2) = -Izz - m*pow(pow(b, 2)*sin(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) - e, 2) - m*pow(pow(a, 2)*sin(x[2])*cos(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + d, 2);
  // End Copy Paste
  
  FPLU5.compute(M_qd);
  _dxdt.block<5, 1>(0, 0) = FPLU5.solve(f_qd);
  FPLU3.compute(M_dyn);
  _dxdt.block<3, 1>(5, 0) = FPLU3.solve(f_dyn);
  
  // Check how well we solve the linear systems
  bool sol1 = (M_qd*_dxdt.block<5, 1>(0, 0)).isApprox(f_qd, 1e-15);
  if (!sol1)
    std::cerr << "qdot solution not close." << std::endl;
  bool sol2 = (M_dyn*_dxdt.block<3, 1>(5, 0)).isApprox(f_dyn, 1e-15);
  if (!sol2)
    std::cerr << "udot solution not close." << std::endl;

  for (int i = 0; i < 8; ++i)
    dxdt[i] = _dxdt(i, 0);

  return GSL_SUCCESS;
}

void rattleback_outputs(simdata *s, rattleback_params *p)
{
  double dxdt[8];
  double *x = s->x;
  const double a = p->a,
               b = p->b,
               c = p->c,
               d = p->d,
               e = p->e,
               f = p->f,
               m = p->m,
               Ixx = p->Ixx,
               Iyy = p->Iyy,
               Izz = p->Izz,
               Ixy = p->Ixy,
               Iyz = p->Iyz,
               Ixz = p->Ixz,
               g = p->g;

  // Compute dxdt
  rattleback_ode(s->t, s->x, dxdt, static_cast<void *>(p));

  // Begin copy paste
  s->CF[0] = m*(((-pow(b, 2)*sin(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + e)*x[5] - (pow(a, 2)*sin(x[2])*cos(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + d)*x[6])*x[6] - ((pow(a, 2)*sin(x[2])*cos(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + d)*x[7] - (-pow(c, 2)*cos(x[1])*cos(x[2])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + f)*x[5])*x[7])*cos(x[2]) + m*(-(-(-pow(b, 2)*sin(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + e)*x[7] + (-pow(c, 2)*cos(x[1])*cos(x[2])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + f)*x[6])*x[6] + ((pow(a, 2)*sin(x[2])*cos(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + d)*x[7] - (-pow(c, 2)*cos(x[1])*cos(x[2])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + f)*x[5])*x[5])*sin(x[2]) - (-m*dxdt[5]*(-pow(b, 2)*sin(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + e) - m*dxdt[6]*(-pow(a, 2)*sin(x[2])*cos(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) - d))*sin(x[2]) - (-m*dxdt[6]*(-pow(c, 2)*cos(x[1])*cos(x[2])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + f) - m*dxdt[7]*(pow(b, 2)*sin(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) - e))*cos(x[2]);
  s->CF[1] = m*(-((-pow(b, 2)*sin(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + e)*x[5] - (pow(a, 2)*sin(x[2])*cos(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + d)*x[6])*x[5] + (-(-pow(b, 2)*sin(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + e)*x[7] + (-pow(c, 2)*cos(x[1])*cos(x[2])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + f)*x[6])*x[7])*cos(x[1]) + m*(((-pow(b, 2)*sin(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + e)*x[5] - (pow(a, 2)*sin(x[2])*cos(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + d)*x[6])*x[6] - ((pow(a, 2)*sin(x[2])*cos(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + d)*x[7] - (-pow(c, 2)*cos(x[1])*cos(x[2])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + f)*x[5])*x[7])*sin(x[1])*sin(x[2]) - m*(-(-(-pow(b, 2)*sin(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + e)*x[7] + (-pow(c, 2)*cos(x[1])*cos(x[2])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + f)*x[6])*x[6] + ((pow(a, 2)*sin(x[2])*cos(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + d)*x[7] - (-pow(c, 2)*cos(x[1])*cos(x[2])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + f)*x[5])*x[5])*sin(x[1])*cos(x[2]) + (-m*dxdt[5]*(-pow(b, 2)*sin(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + e) - m*dxdt[6]*(-pow(a, 2)*sin(x[2])*cos(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) - d))*sin(x[1])*cos(x[2]) - (-m*dxdt[5]*(pow(c, 2)*cos(x[1])*cos(x[2])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) - f) - m*dxdt[7]*(pow(a, 2)*sin(x[2])*cos(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + d))*cos(x[1]) - (-m*dxdt[6]*(-pow(c, 2)*cos(x[1])*cos(x[2])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + f) - m*dxdt[7]*(pow(b, 2)*sin(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) - e))*sin(x[1])*sin(x[2]);
  s->CF[2] = -g*m + m*(-((-pow(b, 2)*sin(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + e)*x[5] - (pow(a, 2)*sin(x[2])*cos(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + d)*x[6])*x[5] + (-(-pow(b, 2)*sin(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + e)*x[7] + (-pow(c, 2)*cos(x[1])*cos(x[2])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + f)*x[6])*x[7])*sin(x[1]) - m*(((-pow(b, 2)*sin(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + e)*x[5] - (pow(a, 2)*sin(x[2])*cos(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + d)*x[6])*x[6] - ((pow(a, 2)*sin(x[2])*cos(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + d)*x[7] - (-pow(c, 2)*cos(x[1])*cos(x[2])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + f)*x[5])*x[7])*sin(x[2])*cos(x[1]) + m*(-(-(-pow(b, 2)*sin(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + e)*x[7] + (-pow(c, 2)*cos(x[1])*cos(x[2])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + f)*x[6])*x[6] + ((pow(a, 2)*sin(x[2])*cos(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + d)*x[7] - (-pow(c, 2)*cos(x[1])*cos(x[2])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + f)*x[5])*x[5])*cos(x[1])*cos(x[2]) - (-m*dxdt[5]*(-pow(b, 2)*sin(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + e) - m*dxdt[6]*(-pow(a, 2)*sin(x[2])*cos(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) - d))*cos(x[1])*cos(x[2]) - (-m*dxdt[5]*(pow(c, 2)*cos(x[1])*cos(x[2])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) - f) - m*dxdt[7]*(pow(a, 2)*sin(x[2])*cos(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + d))*sin(x[1]) + (-m*dxdt[6]*(-pow(c, 2)*cos(x[1])*cos(x[2])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + f) - m*dxdt[7]*(pow(b, 2)*sin(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) - e))*sin(x[2])*cos(x[1]);

  s->ke = 0.5*m*(pow((-pow(b, 2)*sin(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + e)*x[5] - (pow(a, 2)*sin(x[2])*cos(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + d)*x[6], 2) + pow(-(-pow(b, 2)*sin(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + e)*x[7] + (-pow(c, 2)*cos(x[1])*cos(x[2])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + f)*x[6], 2) + pow((pow(a, 2)*sin(x[2])*cos(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + d)*x[7] - (-pow(c, 2)*cos(x[1])*cos(x[2])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + f)*x[5], 2)) + 0.5*(Ixx*x[5] + Ixy*x[6] + Ixz*x[7])*x[5] + 0.5*(Ixy*x[5] + Iyy*x[6] + Iyz*x[7])*x[6] + 0.5*(Ixz*x[5] + Iyz*x[6] + Izz*x[7])*x[7];
  s->pe = -g*m*((-pow(b, 2)*sin(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + e)*sin(x[1]) - (pow(a, 2)*sin(x[2])*cos(x[1])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + d)*sin(x[2])*cos(x[1]) + (-pow(c, 2)*cos(x[1])*cos(x[2])/sqrt(pow(a, 2)*pow(sin(x[2]), 2)*pow(cos(x[1]), 2) + pow(b, 2)*pow(sin(x[1]), 2) + pow(c, 2)*pow(cos(x[1]), 2)*pow(cos(x[2]), 2)) + f)*cos(x[1])*cos(x[2]));
  s->te = s->ke + s->pe;

  s->delta = acos(cos(x[1])*cos(x[2]));

  // End copy paste
  
}

